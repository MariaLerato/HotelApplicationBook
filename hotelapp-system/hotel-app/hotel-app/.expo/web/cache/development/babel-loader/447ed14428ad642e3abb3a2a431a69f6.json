{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PropTypes from 'prop-types';\n\nvar ProfilePicture = function ProfilePicture(props) {\n  var isPicture = props.isPicture,\n      requirePicture = props.requirePicture,\n      URLPicture = props.URLPicture,\n      pictureResizeMode = props.pictureResizeMode,\n      user = props.user,\n      width = props.width,\n      height = props.height,\n      shape = props.shape,\n      pictureStyle = props.pictureStyle,\n      backgroundColor = props.backgroundColor,\n      userTextColor = props.userTextColor,\n      userTextStyle = props.userTextStyle,\n      userContainerStyle = props.userContainerStyle;\n\n  var getFirstLetters = function getFirstLetters() {\n    var firstLetters = [];\n    var words = user.split(' ');\n    words.map(function (word) {\n      return firstLetters.push(word[0]);\n    });\n    return firstLetters.map(function (firstLetter) {\n      return firstLetter;\n    });\n  };\n\n  if (isPicture) {\n    return React.createElement(Image, {\n      source: requirePicture !== null ? requirePicture : {\n        uri: URLPicture\n      },\n      style: [{\n        width: width,\n        height: height,\n        resizeMode: pictureResizeMode\n      }, shape === 'circle' && {\n        borderRadius: 100\n      }, shape === 'rounded' && {\n        borderRadius: 15\n      }, pictureStyle]\n    });\n  } else {\n    return React.createElement(View, {\n      style: [shape === 'circle' && {\n        borderRadius: 100\n      }, shape === 'rounded' && {\n        borderRadius: 15\n      }, {\n        width: width,\n        height: height,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: backgroundColor,\n        userContainerStyle: userContainerStyle\n      }]\n    }, user && React.createElement(Text, {\n      style: [{\n        fontSize: 16,\n        color: userTextColor\n      }, userTextStyle]\n    }, getFirstLetters()));\n  }\n};\n\nProfilePicture.defaultProps = {\n  requirePicture: null,\n  URLPicture: null,\n  pictureResizeMode: 'cover',\n  user: null,\n  width: 50,\n  height: 50,\n  shape: 'circle',\n  pictureStyle: null,\n  backgroundColor: 'indigo',\n  userTextColor: 'white',\n  userTextStyle: null,\n  userContainerStyle: null\n};\nProfilePicture.propTypes = {\n  isPicture: PropTypes.bool.isRequired,\n  requirePicture: PropTypes.number,\n  URLPicture: PropTypes.string,\n  pictureResizeMode: PropTypes.string,\n  user: PropTypes.string,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  shape: PropTypes.string,\n  pictureStyle: PropTypes.object,\n  backgroundColor: PropTypes.string,\n  userTextColor: PropTypes.string,\n  userTextStyle: PropTypes.string,\n  userContainerStyle: PropTypes.object\n};\nexport default ProfilePicture;","map":{"version":3,"sources":["C:/Users/CodeTribe00H/Desktop/HotelApplication/hotelapp-system/hotel-app/hotel-app/node_modules/react-native-profile-picture/index.js"],"names":["React","PropTypes","ProfilePicture","props","isPicture","requirePicture","URLPicture","pictureResizeMode","user","width","height","shape","pictureStyle","backgroundColor","userTextColor","userTextStyle","userContainerStyle","getFirstLetters","firstLetters","words","split","map","word","push","firstLetter","uri","resizeMode","borderRadius","justifyContent","alignItems","fontSize","color","defaultProps","propTypes","bool","isRequired","number","string","object"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {View, Image, Text} from 'react-native';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfilePicture = (props) => {\r\n    const {\r\n        isPicture,\r\n        requirePicture,\r\n        URLPicture,\r\n        pictureResizeMode,\r\n        user,\r\n        width,\r\n        height,\r\n        shape,\r\n        pictureStyle,\r\n        backgroundColor,\r\n        userTextColor,\r\n        userTextStyle,\r\n        userContainerStyle,\r\n    } = props;\r\n\r\n    const getFirstLetters = () => {\r\n        const firstLetters = [];\r\n        const words = user.split(' ');\r\n\r\n        words.map(word => firstLetters.push(word[0]));\r\n\r\n        return firstLetters.map(firstLetter => firstLetter);\r\n    };\r\n\r\n    if (isPicture) {\r\n        return (\r\n            <Image\r\n                source={requirePicture !== null ? requirePicture : {uri: URLPicture}}\r\n                style={[\r\n                    {width, height, resizeMode: pictureResizeMode},\r\n                    shape === 'circle' && {borderRadius: 100},\r\n                    shape === 'rounded' && {borderRadius: 15},\r\n                    pictureStyle,\r\n                ]}\r\n            />\r\n        );\r\n    } else {\r\n        return (\r\n            <View\r\n                style={[\r\n                    shape === 'circle' && {borderRadius: 100},\r\n                    shape === 'rounded' && {borderRadius: 15},\r\n                    {\r\n                        width,\r\n                        height,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        backgroundColor,\r\n                        userContainerStyle,\r\n                    },\r\n                ]}>\r\n                {user && <Text style={[{fontSize: 16, color: userTextColor}, userTextStyle]}>{getFirstLetters()}</Text>}\r\n            </View>\r\n        );\r\n    }\r\n};\r\n\r\nProfilePicture.defaultProps = {\r\n    requirePicture: null,\r\n    URLPicture: null,\r\n    pictureResizeMode: 'cover',\r\n    user: null,\r\n    width: 50,\r\n    height: 50,\r\n    shape: 'circle',\r\n    pictureStyle: null,\r\n    backgroundColor: 'indigo',\r\n    userTextColor: 'white',\r\n    userTextStyle: null,\r\n    userContainerStyle: null,\r\n};\r\n\r\nProfilePicture.propTypes = {\r\n    isPicture: PropTypes.bool.isRequired,\r\n    requirePicture: PropTypes.number,\r\n    URLPicture: PropTypes.string,\r\n    pictureResizeMode: PropTypes.string,\r\n    user: PropTypes.string,\r\n    width: PropTypes.number,\r\n    height: PropTypes.number,\r\n    shape: PropTypes.string,\r\n    pictureStyle: PropTypes.object,\r\n    backgroundColor: PropTypes.string,\r\n    userTextColor: PropTypes.string,\r\n    userTextStyle: PropTypes.string,\r\n    userContainerStyle: PropTypes.object,\r\n};\r\n\r\nexport default ProfilePicture;\r\n"]},"metadata":{},"sourceType":"module"}