{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Icon, Input } from 'react-native-elements';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nvar PaymentMethod = function PaymentMethod(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      number = _useState2[0],\n      setNumber = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      date = _useState6[0],\n      setDate = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      cvv = _useState8[0],\n      setCvv = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      payment = _useState10[0],\n      setPayment = _useState10[1];\n\n  var NewMethod = function NewMethod() {\n    setPayment([].concat(_toConsumableArray(payment), [{\n      id: payment.length + 1,\n      number: number,\n      name: name,\n      date: date,\n      cvv: cvv\n    }]));\n    alert('Details Saved');\n  };\n\n  var Validate = Yup.object({\n    number: Yup.string().max(10, 'Card Numbers Must Be Not More Than 10').required('Required'),\n    name: Yup.string().required('Required'),\n    date: Yup.string().required('Required'),\n    cvv: Yup.string().required('Required')\n  });\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: {\n      marginTop: '10%'\n    }\n  }, React.createElement(View, {\n    style: Styles.header\n  }, React.createElement(Icon, {\n    name: 'arrow-back',\n    color: '#C4C4C4',\n    style: {\n      fontWeight: '700',\n      marginTop: '20%'\n    },\n    onPress: function onPress() {\n      return navigation.goBack();\n    }\n  }), React.createElement(Text, {\n    style: Styles.textHead\n  }, \"Payment Methods\"), React.createElement(TouchableOpacity, {\n    style: {\n      borderColor: '#1C5248',\n      borderWidth: 2,\n      borderRadius: 40,\n      alignItems: 'center',\n      justifyContent: 'center',\n      alignSelf: 'flex-end',\n      width: '15%',\n      marginLeft: '4%'\n    },\n    onPress: function onPress() {\n      return navigation.navigate('paymentmethod');\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#61B0A2',\n      fontSize: 15\n    }\n  }, \"Skip\"))), React.createElement(Formik, {\n    initialValues: {\n      number: '',\n      name: '',\n      date: '',\n      cvv: ''\n    },\n    onSubmit: NewMethod,\n    validateOnMount: true,\n    validationSchema: Validate\n  }, function (_ref2) {\n    var errors = _ref2.errors,\n        handleChange = _ref2.handleChange,\n        handleSubmit = _ref2.handleSubmit,\n        handleBlur = _ref2.handleBlur,\n        touched = _ref2.touched,\n        values = _ref2.values;\n    return React.createElement(View, null, React.createElement(View, {\n      style: {\n        marginTop: '20%'\n      }\n    }, React.createElement(Input, {\n      placeholder: 'Card Number',\n      leftIcon: React.createElement(Icon, {\n        name: 'cc-mastercard',\n        type: 'font-awesome-5',\n        size: 30,\n        color: '#6DA399'\n      }),\n      style: Styles.textbox,\n      value: values.number,\n      onChangeText: handleChange('number'),\n      onBlur: handleBlur('number')\n    }), errors.number && touched.number ? React.createElement(Text, null, errors.number) : null, React.createElement(Input, {\n      placeholder: 'Card Holder',\n      leftIcon: React.createElement(Icon, {\n        name: 'user',\n        type: 'font-awesome-5',\n        size: 30,\n        color: '#6DA399'\n      }),\n      style: Styles.textbox,\n      value: values.name,\n      onChangeText: handleChange('name'),\n      onBlur: handleBlur('name')\n    }), errors.name, React.createElement(Input, {\n      placeholder: 'Expiry Date',\n      leftIcon: React.createElement(Icon, {\n        name: 'calendar',\n        type: 'font-awesome-5',\n        size: 30,\n        color: '#6DA399'\n      }),\n      style: Styles.textbox\n    }), React.createElement(Input, {\n      placeholder: 'CVV',\n      leftIcon: React.createElement(Icon, {\n        name: 'credit-card',\n        type: 'font-awesome-5',\n        size: 30,\n        color: '#6DA399'\n      }),\n      style: Styles.textbox\n    })), React.createElement(TouchableOpacity, {\n      style: {\n        width: '80%',\n        height: 65,\n        borderColor: '#61B0A2',\n        borderWidth: 4,\n        borderRadius: 40,\n        alignItems: 'center',\n        justifyContent: 'center',\n        alignSelf: 'center',\n        marginTop: '10%'\n      },\n      onPress: function onPress() {\n        return navigation.navigate('paymentmethod', {});\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: '#61B0A2',\n        fontSize: 24\n      }\n    }, \"Save\")));\n  })));\n};\n\nvar Styles = StyleSheet.create({\n  header: {\n    display: 'flex',\n    flexDirection: 'row',\n    padding: '2%'\n  },\n  textHead: {\n    color: '#1C5248',\n    fontSize: 28,\n    paddingLeft: '10%',\n    fontWeight: '600',\n    marginTop: '-2%'\n  },\n  textbox: {\n    margin: '2%'\n  }\n});\nexport default PaymentMethod;","map":{"version":3,"sources":["C:/Users/CodeTribe00H/Desktop/my_resume/hotel-app/Components/payment/payment.jsx"],"names":["React","useState","Icon","Input","Formik","Yup","PaymentMethod","navigation","number","setNumber","name","setName","date","setDate","cvv","setCvv","payment","setPayment","NewMethod","id","length","alert","Validate","object","string","max","required","marginTop","Styles","header","fontWeight","goBack","textHead","borderColor","borderWidth","borderRadius","alignItems","justifyContent","alignSelf","width","marginLeft","navigate","color","fontSize","errors","handleChange","handleSubmit","handleBlur","touched","values","textbox","height","StyleSheet","create","display","flexDirection","padding","paddingLeft","margin"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport {View,Text,TouchableOpacity,StyleSheet} from 'react-native'\r\nimport {Icon,Input} from 'react-native-elements'\r\nimport {Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nconst PaymentMethod = ({navigation})=>{\r\n  const [number,setNumber] = useState('')\r\n  const [name,setName] = useState('')\r\n  const [date,setDate] = useState('')\r\n  const [cvv,setCvv] = useState('')\r\n  const [payment,setPayment] = useState([])\r\n\r\n  const NewMethod = ()=>{\r\n    setPayment([...payment,{\r\n      id:payment.length + 1,\r\n      number:number,\r\n      name:name,\r\n      date:date,\r\n      cvv:cvv\r\n    }])\r\n    alert('Details Saved')\r\n    \r\n  }\r\n  const Validate = Yup.object({\r\n    number: Yup.string().max(10,'Card Numbers Must Be Not More Than 10').required('Required'),\r\n    name:Yup.string().required('Required'),\r\n    date:Yup.string().required('Required'),\r\n    cvv:Yup.string().required('Required')\r\n  })\r\n  \r\n    return(\r\n        <>\r\n        <View  style={{marginTop:'10%'}}>\r\n            <View style={Styles.header}>\r\n                <Icon name={'arrow-back'} color={'#C4C4C4'} style={{fontWeight:'700',marginTop:'20%'}} onPress={()=>navigation.goBack()} />\r\n                <Text style={Styles.textHead}>Payment Methods</Text>\r\n                <TouchableOpacity style={{borderColor:'#1C5248',borderWidth:2,borderRadius:40,alignItems:'center',justifyContent:'center',alignSelf:'flex-end',width:'15%',marginLeft:'4%'}} onPress={()=>navigation.navigate('paymentmethod')}><Text  style={{color:'#61B0A2',fontSize:15}} >Skip</Text></TouchableOpacity>\r\n            </View>\r\n           <Formik\r\n           initialValues={{\r\n             number:'',\r\n             name:'',\r\n             date:'',\r\n             cvv:''\r\n           }}\r\n           onSubmit={NewMethod}\r\n           validateOnMount={true}\r\n           validationSchema={Validate}\r\n           >\r\n             {({errors,handleChange,handleSubmit,handleBlur,touched,values})=>(\r\n               <View>\r\n                  <View style={{marginTop:'20%'}}>\r\n                <Input\r\n                placeholder={'Card Number'}\r\n                leftIcon={<Icon name={'cc-mastercard'} type={'font-awesome-5'} size={30} color={'#6DA399'} />}\r\n                style={Styles.textbox}\r\n                value={values.number}\r\n                onChangeText={handleChange('number')}\r\n                onBlur={handleBlur('number')}\r\n                />\r\n                {errors.number && touched.number ? (\r\n                  <Text>{errors.number}</Text>\r\n                ):null}\r\n                  <Input\r\n                placeholder={'Card Holder'}\r\n                leftIcon={<Icon name={'user'} type={'font-awesome-5'} size={30} color={'#6DA399'}/>}\r\n                style={Styles.textbox}\r\n                value={values.name}\r\n                onChangeText={handleChange('name')}\r\n                onBlur={handleBlur('name')}\r\n                />\r\n                {errors.name}\r\n                  <Input\r\n                placeholder={'Expiry Date'}\r\n                leftIcon={<Icon name={'calendar'} type={'font-awesome-5'} size={30} color={'#6DA399'}/>}\r\n                style={Styles.textbox}\r\n                />\r\n                  <Input\r\n                placeholder={'CVV'}\r\n                leftIcon={<Icon name={'credit-card'} type={'font-awesome-5'} size={30} color={'#6DA399'} />}\r\n                style={Styles.textbox}\r\n                />\r\n                \r\n            </View>\r\n            <TouchableOpacity style={{width:'80%',height:65,borderColor:'#61B0A2',borderWidth:4,borderRadius:40,alignItems:'center',justifyContent:'center',alignSelf:'center',marginTop:'10%'}} onPress={()=>navigation.navigate('paymentmethod',{\r\n\r\n            })}><Text style={{color:'#61B0A2',fontSize:24}}>Save</Text></TouchableOpacity>\r\n               </View>\r\n             )}\r\n           </Formik>\r\n           \r\n        </View>\r\n        </>\r\n    )\r\n}\r\nconst Styles = StyleSheet.create({\r\n    header:{\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        padding:'2%'\r\n      },\r\n    textHead:{\r\n        color:'#1C5248',\r\n        fontSize:28,\r\n        paddingLeft:'10%',\r\n        fontWeight:'600',\r\n        marginTop:'-2%'\r\n      \r\n      },\r\n      textbox:{\r\n        margin:'2%'\r\n      }\r\n})\r\nexport default PaymentMethod"]},"metadata":{},"sourceType":"module"}