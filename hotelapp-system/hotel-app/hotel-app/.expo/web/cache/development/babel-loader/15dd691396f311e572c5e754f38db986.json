{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Icon, Avatar } from 'react-native-elements';\nimport { TextInput } from 'react-native-paper';\nimport ProfilePicture from 'react-native-profile-picture';\nimport * as ImagePicker from 'expo-image-picker';\nimport BackendInfo from \"./service/service\";\n\nvar EditProfile = function EditProfile(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      surname = _useState6[0],\n      setSurname = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      email = _useState8[0],\n      setEmail = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      client = _useState10[0],\n      setClient = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      password = _useState12[0],\n      setPassword = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      userId = _useState14[0],\n      setId = _useState14[1];\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  function EditUser(e) {\n    var client;\n    return _regeneratorRuntime.async(function EditUser$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            e.preventDefault();\n            client = {\n              name: name,\n              surname: surname,\n              image: image,\n              age: age\n            };\n            console.log(client);\n            BackendInfo.postClient(client).then(function (res) {\n              console.log(res.data);\n            }).catch(function (e) {\n              console.log(e);\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n    style: Styles.container\n  }, React.createElement(View, {\n    style: Styles.header\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.goBack();\n    }\n  }, React.createElement(Icon, {\n    name: 'arrow-back',\n    color: 'white',\n    style: {\n      fontWeight: '700',\n      marginTop: '20%'\n    },\n    onPress: function onPress() {\n      return navigation.goBack();\n    }\n  })), React.createElement(Text, {\n    style: Styles.textHead\n  }, \"Edit Profile\"), React.createElement(TouchableOpacity, {\n    onPress: EditUser\n  }, React.createElement(Text, {\n    style: Styles.subtext\n  }, \"Done\"))), React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      marginTop: '2%'\n    }\n  }, image ? React.createElement(ProfilePicture, {\n    isPicture: true,\n    source: {\n      uri: image\n    },\n    shape: \"circle\",\n    width: 90,\n    height: 90,\n    backgroundColor: \"#d9d9d9\",\n    userTextStyle: {\n      fontWeight: '600',\n      fontSize: 25\n    },\n    pictureStyle: Styles.image\n  }) : React.createElement(ProfilePicture, {\n    isPicture: false,\n    user: \"Maria Fenyane\",\n    shape: \"circle\",\n    width: 90,\n    height: 90,\n    backgroundColor: \"#d9d9d9\",\n    userTextStyle: {\n      fontWeight: '600',\n      fontSize: 25\n    },\n    pictureStyle: Styles.image\n  }), React.createElement(TouchableOpacity, {\n    onPress: pickImage\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 24,\n      marginBottom: '2%'\n    }\n  }, \"Change Profile Picture\")), React.createElement(View, {\n    style: {\n      width: '100%',\n      alignItems: 'center'\n    }\n  }, React.createElement(TextInput, {\n    placeholder: 'Enter Name',\n    label: 'First Name',\n    value: name,\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    style: {\n      backgroundColor: '#E8FDF9',\n      borderRadius: 10,\n      width: '80%',\n      margin: '2%'\n    }\n  }), React.createElement(TextInput, {\n    placeholder: 'Enter surname',\n    label: 'Last Name',\n    value: surname,\n    onChange: function onChange(e) {\n      return setSurname(e.target.value);\n    },\n    style: {\n      backgroundColor: '#E8FDF9',\n      borderRadius: 10,\n      width: '80%',\n      margin: '2%'\n    }\n  }), React.createElement(TextInput, {\n    placeholder: 'Email Address',\n    label: 'Email Address',\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    style: {\n      backgroundColor: '#E8FDF9',\n      borderRadius: 10,\n      width: '80%',\n      margin: '2%'\n    }\n  }), React.createElement(TextInput, {\n    placeholder: '',\n    label: 'Old Password',\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    style: {\n      backgroundColor: '#E8FDF9',\n      borderRadius: 10,\n      width: '80%',\n      margin: '2%'\n    }\n  }), React.createElement(TextInput, {\n    placeholder: ' ',\n    label: 'New Password',\n    style: {\n      backgroundColor: '#E8FDF9',\n      borderRadius: 10,\n      width: '80%',\n      margin: '2%'\n    }\n  })))));\n};\n\nvar Styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#61B0A2'\n  },\n  header: {\n    display: 'flex',\n    flexDirection: 'row',\n    padding: '2%',\n    marginTop: '6%'\n  },\n  textHead: {\n    color: 'white',\n    paddingLeft: '30%',\n    fontSize: 24,\n    fontWeight: '700'\n  },\n  subtext: {\n    color: 'white',\n    paddingLeft: '20%',\n    paddingTop: '1%'\n  },\n  image: {\n    width: 110,\n    height: 110,\n    borderRadius: 50,\n    borderWidth: 1,\n    borderColor: 'white'\n  }\n});\nexport default EditProfile;","map":{"version":3,"sources":["C:/Users/CodeTribe00H/Desktop/HotelApplication/hotelapp-system/hotel-app/hotel-app/Components/editprofile.jsx"],"names":["React","useState","Icon","Avatar","TextInput","ProfilePicture","ImagePicker","BackendInfo","EditProfile","navigation","image","setImage","name","setName","surname","setSurname","email","setEmail","client","setClient","password","setPassword","userId","setId","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","uri","EditUser","e","preventDefault","age","console","log","postClient","then","res","data","catch","Styles","container","header","goBack","fontWeight","marginTop","textHead","subtext","alignItems","fontSize","color","marginBottom","width","target","value","backgroundColor","borderRadius","margin","StyleSheet","create","flex","display","flexDirection","padding","paddingLeft","paddingTop","height","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, ScrollView, TouchableOpacity, StyleSheet, Image } from 'react-native'\r\nimport { Icon, Avatar } from 'react-native-elements';\r\nimport { TextInput } from 'react-native-paper';\r\nimport ProfilePicture from 'react-native-profile-picture'\r\nimport * as ImagePicker from 'expo-image-picker'\r\nimport BackendInfo from './service/service'\r\n\r\nconst EditProfile = ({ navigation }) => {\r\n    const [image, setImage] = useState(null)\r\n    const [name,setName] = useState()\r\n    const [surname,setSurname] = useState()\r\n    const [email,setEmail] = useState()\r\n    const [client,setClient] = useState([])\r\n    const [password,setPassword] = useState()\r\n    const [userId,setId] = useState(0)\r\n\r\n    const pickImage = async () => {\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n            allowsEditing: true,\r\n            aspect: [4, 3],\r\n            quality: 1,\r\n        })\r\n        if (!result.cancelled) {\r\n            setImage(result.uri)\r\n        }\r\n    }\r\n    async  function EditUser(e){\r\n        e.preventDefault()\r\n        const client = {name,surname,image,age}\r\n        console.log(client)\r\n       BackendInfo.postClient(client)\r\n        .then((res)=>{\r\n            console.log(res.data)\r\n        }).catch((e)=>{\r\n            console.log(e)\r\n        })   \r\n    }\r\n    return (\r\n        <>\r\n            <ScrollView style={Styles.container}>\r\n                <View style={Styles.header}>\r\n                    <TouchableOpacity onPress={() => navigation.goBack()}>\r\n                        <Icon name={'arrow-back'} color={'white'} style={{ fontWeight: '700', marginTop: '20%' }} onPress={() => navigation.goBack()} /></TouchableOpacity>\r\n                    <Text style={Styles.textHead}>Edit Profile</Text>\r\n                    <TouchableOpacity onPress={EditUser}><Text style={Styles.subtext}>Done</Text></TouchableOpacity>\r\n                </View>\r\n                <View style={{ alignItems: 'center', marginTop: '2%' }}>\r\n\r\n                    {image ? (\r\n                    // <Image source={{ uri: image }} style={Styles.image} />\r\n                    <ProfilePicture\r\n                    isPicture={true}\r\n                    source={{ uri: image }}\r\n                    shape='circle'\r\n                    width={90}\r\n                    height={90}\r\n                    backgroundColor='#d9d9d9'\r\n                    userTextStyle={{ fontWeight: '600', fontSize: 25 }}\r\n                    pictureStyle={Styles.image}\r\n                />\r\n                    ) : (\r\n                        <ProfilePicture\r\n                            isPicture={false}\r\n                            user='Maria Fenyane'\r\n                            shape='circle'\r\n                            width={90}\r\n                            height={90}\r\n                            backgroundColor='#d9d9d9'\r\n                            userTextStyle={{ fontWeight: '600', fontSize: 25 }}\r\n                            pictureStyle={Styles.image}\r\n\r\n                        />\r\n                    )}\r\n                    <TouchableOpacity onPress={pickImage}>\r\n\r\n                        <Text style={{ color: 'white', fontSize: 24, marginBottom: '2%' }}>Change Profile Picture</Text>\r\n                    </TouchableOpacity>\r\n                    <View style={{ width: '100%', alignItems: 'center' }}>\r\n                        <TextInput placeholder={'Enter Name'} label={'First Name'} value={name} onChange={(e)=>setName(e.target.value)} style={{ backgroundColor: '#E8FDF9', borderRadius: 10, width: '80%', margin: '2%' }} />\r\n                        <TextInput placeholder={'Enter surname'} label={'Last Name'} value={surname} onChange={(e)=>setSurname(e.target.value)} style={{ backgroundColor: '#E8FDF9', borderRadius: 10, width: '80%', margin: '2%' }} />\r\n        \r\n                        <TextInput placeholder={'Email Address'} label={'Email Address'} value={email} onChange={(e)=>setEmail(e.target.value)} style={{ backgroundColor: '#E8FDF9', borderRadius: 10, width: '80%', margin: '2%' }} />\r\n                        <TextInput placeholder={''} label={'Old Password'} value={password} onChange={(e)=>setPassword(e.target.value)} style={{ backgroundColor: '#E8FDF9', borderRadius: 10, width: '80%', margin: '2%' }} />\r\n                        <TextInput placeholder={' '} label={'New Password'} style={{ backgroundColor: '#E8FDF9', borderRadius: 10, width: '80%', margin: '2%' }} />\r\n                    </View>\r\n                </View>\r\n            </ScrollView>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#61B0A2'\r\n    },\r\n    header: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        padding: '2%',\r\n        marginTop: '6%'\r\n    },\r\n    textHead: {\r\n        color: 'white',\r\n        paddingLeft: '30%',\r\n        fontSize: 24,\r\n        fontWeight: '700'\r\n    },\r\n    subtext: {\r\n        color: 'white',\r\n        paddingLeft: '20%', paddingTop: '1%'\r\n    },\r\n    image: {\r\n        width: 110,\r\n        height: 110,\r\n        borderRadius: 50,\r\n        borderWidth: 1,\r\n        borderColor: 'white'\r\n    }\r\n})\r\nexport default EditProfile"]},"metadata":{},"sourceType":"module"}